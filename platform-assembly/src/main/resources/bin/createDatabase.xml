<?xml version="1.0" encoding="ISO-8859-1" ?>

<!--
Ant build script for creating a new MCT MySQL database.

To use this script:

1. Install Apache Ant

You can get Apache Ant from http://ant.apache.org/bindownload.cgi. The
latest version, as of this writing, is 1.8.2. Follow the directions
in the Ant distribution for installing the Ant application.

To see which Ant version you have, execute the following on command line:
ant -version

The rest of these instructions assume Ant is in the path. If not, you
will have to use the fully-qualified path to the Ant script file
(ant, or ant.bat under Windows).


2. Pass in MySQL DB connection info.

Create a file called local.properties in the MCT install directory.
That file should have these properties:

mct.admin_userName=<db admin user name>
mct.admin_password=<db admin password>
mct.database_userName=<db account user name>
mct.database_password=<db account password>
mct.database_name=<db name>
mct.database_host=<db host> (defaults to localhost if none specified)
mct.database_port=<db port> (defaults to 3306 if none specified for MySQL)
mct.db.check-schema-version=false
mct.runtime.memory=<JVM max. heap memory allocation> 
mct.imars.MCCreconID=<recon ID>


You may also set other properties from those below, if you need a value
other than the default. For example, here is a file that changes the
database port to a value other than the default 3306:

For example:
mct.admin_userName=mctdbadmin
mct.admin_password=mctdbadmin
mct.database_userName=mctdbuser
mct.database_password=mctdbuser
mct.database_name=mct
mct.database_host=localhost
mct.database_port=3306
mct.runtime.memory=512
mct.db.check-schema-version=false
mct.imars.MCCreconID=defaultReconId

3. Load the MCT Database

Run this command:

ant -f bin/build.xml create-database

This drops the current MCT database, if it exists, recreates it, and populates
it with the minimal generic data. This can be tailored to specific data source
and/or project missions 

5. Configure and edit resources/properties/persistence.properties and resources/properties/services.xml config files
to tailor to your specific needs. 

For example, change persistence.properfies config file to tailor to JSC specific DB connection params.
a) mct.database_name=mct
b) mct.database_userName=mctdbuser
c) mct.database_password=mctdbuser


Notes:
- Must edit persistence.properties and services.xml by hand to configure specific needs if configure-mct does not match the string pattern for string replacements.

-->

<project name="MCT Create Database" default="usage" basedir="..">
    
    <property file="local.properties" />
    
    <property name="mct.install.dir" location="." />

    <!-- Set the default values, which may be overridden by local.properties. -->
    <property name="mct.database_host" value="localhost" />
    <property name="mct.database_port" value="3306" />
    <property name="mct.admin_userName" value="mctdbadmin" />
    <property name="mct.admin_password" value="mctdbadmin" />
	<property name="rwRoot" value="." />
    <property name="mct.database_userName" value="mctdbuser" />
    <property name="mct.database_password" value="mctdbuser" />
    <property name="mct.database_name" value="mct" />
    <property name="mct.runtime.memory" value="400" />
    <property name="mct.db.check-schema-version" value="false" />
	<property name="mct.imars.MCCreconID" value="defaultReconId" />
	<property name="mct.VMOPT" value="" />

    <property file="${mct.install.dir}/resources/properties/persistence.properties" />
    
    <property name="lib.dir" location="${mct.install.dir}/lib" />
    <path id="lib.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
        </fileset>
    </path>
    
    <path id="tools.classpath">
        <pathelement location="${mct.install.dir}" />
        <pathelement location="${mct.install.dir}/resources" />
        <path refid="lib.classpath" />
    </path>
	
	<path id="ext.classpath">
		<pathelement location="ext" />
		<pathelement path="${java.ext.dirs}" />
	</path>
	
	<pathconvert refid="ext.classpath" property="ext.classpath.value" />

    <property name="mysql.driver" value="com.mysql.jdbc.Driver" />
    <property name="mysql.rootUrl" value="jdbc:mysql://${mct.database_host}:${mct.database_port}" />
    <property name="mysql.url" value="${mysql.rootUrl}/${mct.database_name}" />
    
    <presetdef name="mct.sql">
        <sql driver="${mysql.driver}"
             url="${mysql.url}"
             userid="${mct.admin_userName}"
             password="${mct.admin_password}"
             classpathref="lib.classpath"
             delimiter=";"
             expandproperties="false" />
    </presetdef>
    
    <presetdef name="mct.java">
        <java classpathref="tools.classpath"
              fork="yes"
              failonerror="yes"
              dir="${mct.install.dir}">
            <jvmarg value="-Djava.ext.dirs=${ext.classpath.value}" />
        </java>
    </presetdef>
            
    <target name="usage" description="Display usage information for this Ant build file">
    	<fail message="Usage: ant -f /path/to/antfile/createDatabase.xml -Dmct.database_host=db_host\n 
    		-Dmct.database_port=db_port" unless="mct.database_host" />
        <echo message="NOTE: Use 'ant -projecthelp' to display information about available targets." />
    </target>
    
	<target name="init">
	        <fail message="mct.install.dir is not set" unless="mct.install.dir" />
	        <fail message="mct.admin_userName is not set">
	            <condition>
	                <equals arg1="${mct.admin_userName}" arg2="CHANGE_THIS" />
	            </condition>
	        </fail>
	        <fail message="mct.admin_password is not set">
	            <condition>
	                <equals arg1="${mct.admin_userName}" arg2="CHANGE_THIS" />
	            </condition>
	        </fail>
	    </target>
	
	<target name="configure-mct" depends="init" description="Configure the MCT persistence.properties MySQL DB connection parameters.">
	        <replace file="${mct.install.dir}/resources/properties/persistence.properties">
	            <replacefilter token="mct.database_connectionUrl=jdbc\:mysql\://CHANGE_THIS\:CHANGE_THIS/"
	                           value="mct.database_connectionUrl=jdbc\:mysql\://${mct.database_host}\:${mct.database_port}/" />
	            <replacefilter token="mct.database_name=CHANGE_THIS"
	                           value="mct.database_name=${mct.database_name}" />
	            <replacefilter token="mct.database_userName=CHANGE_THIS"
	                           value="mct.database_userName=${mct.database_userName}" />
	            <replacefilter token="mct.database_password=CHANGE_THIS"
	                           value="mct.database_password=${mct.database_password}" />
	        </replace>
	        
	    </target>
	
	<!-- Replaces UNIX/Linux shell script createDatabase.sh (Generic DB, no JSC specifics) -->
	<target name="create-database-user" description="Creates MCT MySQL database user with minimal persmissions.">
	<echo>Drops and recreates database ${mct.database_name}.</echo>
	        <mct.sql url="${mysql.rootUrl}" expandproperties="true">
	            drop database if exists ${mct.database_name};
	            create database ${mct.database_name} character set ucs2;
	            grant INSERT,DELETE,UPDATE,SELECT,EXECUTE on ${mct.database_name}.* to '${mct.database_userName}' identified by '${mct.database_password}';
	            grant INSERT,DELETE,UPDATE,SELECT,EXECUTE on ${mct.database_name}.* to '${mct.database_userName}'@'localhost' identified by '${mct.database_password}';
	        </mct.sql>
	</target>    	
	
	<target name="create-database" description="Drops and creates MCT MySQL database.">
        		
        <echo>1. Drops MCT existing tables in DB schema.</echo>
         <mct.sql url="${mysql.url}" expandproperties="true" src="${mct.install.dir}/resources/persistence/dropTables.txt" />
    	
    	<echo>2. Creates MCT tables in DB schema.</echo>
    	<mct.sql url="${mysql.url}" expandproperties="true" src="${mct.install.dir}/resources/persistence/createTables.txt" />
                
    	<echo>3. Inserts database identification ${mct.database_name}.</echo>
    	<tstamp>
    		<format property="UNIX_DATE_TIMESTAMP" pattern="E MM dd hh:mm:ss z yyyy" locale="en,US"/>
    	</tstamp>
    	<echo>UNIX/Linux Date/Timestamp: ${UNIX_DATE_TIMESTAMP}</echo>
	    <mct.sql url="${mysql.url}" expandproperties="true">
    		insert into database_identification values ('database_name', '${mct.database_name}', 0);
    		insert into database_identification values ('creation_timestamp','${UNIX_DATE_TIMESTAMP}', 0 );
	    	insert into database_identification values ('data_sources', '', 0 );
    	</mct.sql>
    			
    	<echo>4. Loads Admin group and TestUsers group.</echo>
    	<mct.sql url="${mysql.url}" expandproperties="true">
    		INSERT INTO disciplines VALUES ('admin','MCT Administrator Group','',0),('TestUsers','All TestUsers','',0);
    	</mct.sql>
    	
    	<echo>5. Loads Admin user and test users.</echo>
    	<mct.sql url="${mysql.url}" expandproperties="true">
    		insert into mct_users values ('admin','MCT','Administrator','admin',0),('testUser1','','','TestUsers',0),('testUser2','','','TestUsers',0),('testUser3','','','TestUsers',0),('testUser4','','','TestUsers',0),('testUser5','','','TestUsers',0),('testUser6','','','TestUsers',0);
    	</mct.sql>
    	
    	<echo>6. Loads Base Taxonomy roots.</echo>
    	<mct.sql url="${mysql.url}" expandproperties="true" src="${mct.install.dir}/resources/persistence/createRootTaxonomyNodes.sql" />
    	
    	<echo>7. Loads Base Group Dropboxes.</echo>
    	<mct.sql url="${mysql.url}" expandproperties="true" src="${mct.install.dir}/resources/persistence/createDropboxesForGroups.sql" />
    	
    	<echo>8. Loads Base User Dropboxes.</echo>
    	<mct.sql url="${mysql.url}" expandproperties="true" src="${mct.install.dir}/resources/persistence/createDropboxesForUsers.sql" />
    	    	
    </target>
		
	 <target name="start-mct" description="Start the MCT system.">
	        <fail message="Usage: ant -Dmct.user=username -DrwRoot=readWriteRootPath start-mct" unless="mct.user" />
	        <mct.java classname="gov.nasa.arc.mct.launch.Startup">
	            <jvmarg value="-Dmct.user=${mct.user}" />
	            <jvmarg value="-DrwRoot=${rwRoot}" />
	            <jvmarg value="-Xms${mct.runtime.memory}m" />
		        <jvmarg value="-Xmx${mct.runtime.memory}m" />
	            <jvmarg value="-Dmct.db.check-schema-version=${mct.db.check-schema-version}" />
                <jvmarg value="-DdisableShiftChangeMonitor=true" />        
                <jvmarg value="-DMCCreconID=${mct.imars.MCCreconID}" />
	            <jvmarg value="-Dorg.jboss.logging.provider=slf4j" />
                <jvmarg line="${mct.VMOPT}" />
	        </mct.java>
	    </target>
	
</project>
